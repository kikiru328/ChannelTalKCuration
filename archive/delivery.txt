@app.route("/delivery_curation", methods=["GET", "POST"])
def delivery_():
    def auto(content):
        print("####DELIVERY####", content)
        """_summary_

        Args:
            content (str): chat_id : UserChat ID
            +) Tags : Only for curation
            +) thread : Webhook for flask
        """

        chat_id = content["entity"]["chatId"]
        post_type = "user-chats"
        import delivery_date
        import datetime

        now = datetime.datetime.now()
        holiday_dataframe = delivery_date.holiday_dataframe
        print("######### NOW ##########", now)
        time.sleep(0.68)
        try:
            if content["refers"]["userChat"]["source"]["supportBot"]["id"] == "52853":
                if content["entity"]["plainText"] == "새벽배송":
                    delivery_date.get_delivery_start_date_each.get_deliv_start_date(
                        chat_id, post_type, now, holiday_dataframe, "새벽배송"
                    )
                elif content["entity"]["plainText"] == "일반배송":
                    delivery_date.get_delivery_start_date_each.get_deliv_start_date(
                        chat_id, post_type, now, holiday_dataframe, "일반배송"
                    )
                elif content["entity"]["plainText"] == "직접배송":
                    delivery_date.get_delivery_start_date_each.get_deliv_start_date(
                        chat_id, post_type, now, holiday_dataframe, "직접배송"
                    )
        except:
            pass

    if request.method == "GET":
        content = request.args.to_dict()
    elif request.method == "POST":
        if request.is_json is True:
            content = request.get_json()
        else:
            content = request.form.to_dict()

    thread = threading.Thread(target=auto, kwargs={"content": content})
    thread.start()

    return "delivery_curation successfully operated!"